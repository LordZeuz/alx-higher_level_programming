Testing the matrix division
===========================
This module defines a matrix division function ``matrix_divided(matrix, div)``.


Usage
=====
        >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
        >>> matrix = [[1, 2, 3], [4, 5, 6]]

	>>> print(matrix)
	[[1, 2, 3], [4, 5, 6]]

	>>> print(matrix_divided(matrix, -5))
	[[-0.2, -0.4, -0.6], [-0.8, -1.0, -1.2]]

	>>> print(matrix_divided(matrix, 100000))
	[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

	>>> print(matrix_divided([], 3))
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats
 
	>>> print(matrix_divided([[]], 3))
	[[]]

	>>> print(matrix_divided([[4, 6, 7], [5, 4]], 4))
	Traceback (most recent call last):
	TypeError: Each row of the matrix must have the same size

        >>> print(matrix_divided(["hye", "gur"], 4))
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

        >>> print(matrix_divided(matrix, None))
	Traceback (most recent call last):
	TypeError: div must be a number

        >>> print(matrix_divided(matrix, 0))
	Traceback (most recent call last):
	ZeroDivisionError: division by zero
